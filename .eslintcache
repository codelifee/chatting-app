[{"/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/index.js":"1","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/App.js":"2","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/reportWebVitals.js":"3","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/Sidebar.js":"4","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/SidebarChat.js":"5","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/Chat.js":"6","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/configuration/firebase.js":"7","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/Login.js":"8"},{"size":591,"mtime":1611668138700,"results":"9","hashOfConfig":"10"},{"size":728,"mtime":1611666256023,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611276390051,"results":"12","hashOfConfig":"10"},{"size":2027,"mtime":1611648998457,"results":"13","hashOfConfig":"10"},{"size":1236,"mtime":1611650884700,"results":"14","hashOfConfig":"10"},{"size":2712,"mtime":1611651530786,"results":"15","hashOfConfig":"10"},{"size":676,"mtime":1611648250534,"results":"16","hashOfConfig":"10"},{"size":864,"mtime":1611667715578,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"v5ppiq",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/index.js",["39","40","41"],"/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/App.js",["42"],"import './App.css';\nimport Sidebar from \"./Sidebar\"\nimport Chat from \"./Chat\"\nimport React, {useState} from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './Login'\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  return (\n    <div className=\"app\">\n\n      {!user ? (\n        <Login />\n      ) : (\n      <div className=\"app__body\">\n         <Router>\n          <Sidebar />\n          <Switch>  \n            <Route path=\"/rooms/:roomId\" >\n              <Chat />\n            </Route>\n            <Route path=\"/\" >\n              {/* <Chat /> */}\n            </Route>\n          </Switch>  \n        </Router>\n      </div>\n    )}\n    </div>\n  );\n}\n\nexport default App;\n",["43","44"],"/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/reportWebVitals.js",[],"/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/Sidebar.js",["45"],"import React, { useEffect, useState } from 'react'\nimport './Sidebar.css'\nimport {Avatar, IconButton} from \"@material-ui/core\"\nimport ChatIcon from \"@material-ui/icons/Chat\"\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport { SearchOutlined } from '@material-ui/icons';\nimport SidebarChat from './SidebarChat'\nimport db from './configuration/firebase'\n\n\n\nfunction Sidebar() {\n    const [rooms, setRooms] = useState([]);\n\n    useEffect(() => {\n        const unsubscribe = db.collection(\"rooms\").\n        onSnapshot((snapshot) => \n                setRooms(\n                snapshot.docs.map((doc) => ({\n                        id: doc.id,\n                        data: doc.data(),\n                    }))\n                )\n            );\n\n        return () => {\n            unsubscribe();\n        };\n    }, [])\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__header\">\n                <Avatar />\n                <div className=\"sidebar__headerRight\">\n                    <IconButton>\n                        <DonutLargeIcon />\n                    </IconButton>\n                    <IconButton>\n                        <ChatIcon />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>    \n                </div>\n            </div>\n\n            <div className=\"sidebar__search\">\n                <div className=\"sidebar__searchContainer\">\n                    <SearchOutlined />\n                    <input placeholder=\"Search or start new chat\" type=\"text\" />\n                </div>\n                \n            </div>\n\n            <div className=\"sidebar__chats\">\n                <SidebarChat addNewChat/>\n                {rooms.map(room => (\n                    <SidebarChat key={room.id} id={room.id}\n                    name={room.data.name} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/SidebarChat.js",["46"],"import React, {useEffect, useState} from 'react'\nimport {Avatar} from \"@material-ui/core\"\nimport './SidebarChat.css'\nimport db from './configuration/firebase'\nimport { useParams } from \"react-router-dom\";\nimport {Link} from 'react-router-dom'\n\nfunction SidebarChat({id, name, addNewChat}) {\n    const {roomId} = useParams();\n\n    const [seed, setSeed] = useState('');\n\n    const createChat = () => {\n        const roomName = prompt(\"Please enter name for chat\");\n\n        if(roomName) {\n            db.collection('rooms').add({\n                name: roomName,\n            })\n        }\n    };\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));\n    }, []);\n\n    // reusing return value\n    return !addNewChat ? (\n        <Link to={`/rooms/${id}`}>\n            <div className=\"sidebarChat\">\n            <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\n            <div className=\"sidebarChat__info\">\n                <h2>{name}</h2>\n                <p>Last message...</p>\n            </div>\n            </div>\n        </Link>\n    ) : (\n        <div onClick={createChat}\n        className=\"sidebarChat\"\n        >\n            <h2>Add new Chat</h2>\n        </div>\n    )\n}\n\nexport default SidebarChat\n","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/Chat.js",["47"],"import React, { useState, useEffect } from 'react'\nimport './Chat.css'\nimport {Avatar, IconButton} from \"@material-ui/core\";\nimport MicIcon from \"@material-ui/icons/Mic\"\nimport InsertEmoticon from \"@material-ui/icons/InsertEmoticon\"\nimport { AttachFile, MoreVert, SearchOutlined} from '@material-ui/icons';\nimport db from './configuration/firebase'\nimport {useParams} from \"react-router-dom\"\n\nfunction Chat() {\n    const [input, setInput] = useState(\"\");\n    const [seed, setSeed] = useState(\"\");\n    const [roomName, setRoomName] = useState(\"\");\n    const { roomId } = useParams();\n\n    useEffect(() => {\n        if (roomId) {\n            db.collection('rooms').doc(roomId).\n            onSnapshot(snapshot => (\n                setRoomName(snapshot.data().name)\n            ))\n        }\n    }, [roomId])\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));\n    }, [roomId]);\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        console.log(\"You typed >>> \", input)\n\n        setInput(\"\");\n    }\n\n    return (\n        <div className=\"chat\">\n            <div className=\"chat__header\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\n\n                <div className=\"chat__headerInfo\">\n                    <h3>{roomName}</h3>\n                    <p>Last seen at ...</p>\n                </div>\n\n                <div className=\"chat__headerRight\">\n                    <IconButton>\n                        <SearchOutlined />\n                    </IconButton>\n                    <IconButton>\n                        <AttachFile />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVert />\n                    </IconButton>\n                </div>\n            </div>\n\n            <div className=\"chat__body\">\n                <p className={`chat__message ${true && \"chat__reviever\"}`}>\n                    <span className=\"chat__name\">\n                        codelifee\n                    </span>\n                    Hello Guys\n                    <span className=\"chat__timestamp\">\n                        3:52pm\n                    </span>\n                </p>\n            </div>\n\n            <div className=\"chat__footer\">\n                <InsertEmoticon />\n                <form>\n                    <input value={input} \n                    onChange={e => setInput(e.target.value)} \n                    placeholder=\"Type a message\"\n                    type=\"text\"\n                    />\n                    <button onClick={sendMessage} type=\"submit\">Send a message</button>\n                </form>\n                <MicIcon />\n            </div>    \n        </div>\n    )\n}\n\nexport default Chat\n","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/configuration/firebase.js",[],"/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/Login.js",[],{"ruleId":"48","severity":2,"message":"49","line":9,"column":6,"nodeType":"50","endLine":9,"endColumn":19},{"ruleId":"51","severity":2,"message":"52","line":9,"column":34,"nodeType":"53","messageId":"54","endLine":9,"endColumn":46},{"ruleId":"51","severity":2,"message":"55","line":10,"column":14,"nodeType":"53","messageId":"54","endLine":10,"endColumn":21},{"ruleId":"56","severity":1,"message":"57","line":9,"column":16,"nodeType":"53","messageId":"58","endLine":9,"endColumn":23},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":17,"column":51,"nodeType":"65","messageId":"66","endLine":17,"endColumn":52,"fix":"67"},{"ruleId":"56","severity":1,"message":"68","line":9,"column":12,"nodeType":"53","messageId":"58","endLine":9,"endColumn":18},{"ruleId":"63","severity":1,"message":"64","line":18,"column":47,"nodeType":"65","messageId":"66","endLine":18,"endColumn":48,"fix":"69"},"react/jsx-no-undef","'StateProvider' is not defined.","JSXIdentifier","no-undef","'initialState' is not defined.","Identifier","undef","'reducer' is not defined.","no-unused-vars","'setUser' is assigned a value but never used.","unusedVar","no-native-reassign",["70"],"no-negated-in-lhs",["71"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"72","text":"73"},"'roomId' is assigned a value but never used.",{"range":"74","text":"75"},"no-global-assign","no-unsafe-negation",[566,576],"\n        .",[674,688],"\n            ."]