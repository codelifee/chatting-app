[{"/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/index.js":"1","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/App.js":"2","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/reportWebVitals.js":"3","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/Sidebar.js":"4","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/SidebarChat.js":"5","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/Chat.js":"6","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/configuration/firebase.js":"7","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/Login.js":"8","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/StateProvider.js":"9","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/reducer.js":"10"},{"size":688,"mtime":1611714965751,"results":"11","hashOfConfig":"12"},{"size":778,"mtime":1611715303453,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611276390051,"results":"14","hashOfConfig":"12"},{"size":2142,"mtime":1611732782310,"results":"15","hashOfConfig":"12"},{"size":1964,"mtime":1611748253533,"results":"16","hashOfConfig":"12"},{"size":3901,"mtime":1611748245691,"results":"17","hashOfConfig":"12"},{"size":676,"mtime":1611648250534,"results":"18","hashOfConfig":"12"},{"size":1104,"mtime":1611715086711,"results":"19","hashOfConfig":"12"},{"size":384,"mtime":1611714502990,"results":"20","hashOfConfig":"12"},{"size":404,"mtime":1611715104137,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"v5ppiq",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/index.js",[],["46","47"],"/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/App.js",["48","49"],"import './App.css';\nimport Sidebar from \"./Sidebar\"\nimport Chat from \"./Chat\"\nimport React, {useState} from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './Login'\nimport {useStateValue} from \"./StateProvider\"\n\nfunction App() {\n  const [{user}, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n\n      {!user ? (\n        <Login />\n      ) : (\n      <div className=\"app__body\">\n         <Router>\n          <Sidebar />\n          <Switch>  \n            <Route path=\"/rooms/:roomId\" >\n              <Chat />\n            </Route>\n            <Route path=\"/\" >\n              {/* <Chat /> */}\n            </Route>\n          </Switch>  \n        </Router>\n      </div>\n    )}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/reportWebVitals.js",[],"/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/Sidebar.js",["50","51"],"import React, { useEffect, useState } from 'react'\nimport './Sidebar.css'\nimport {Avatar, IconButton} from \"@material-ui/core\"\nimport ChatIcon from \"@material-ui/icons/Chat\"\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport { SearchOutlined } from '@material-ui/icons';\nimport SidebarChat from './SidebarChat'\nimport db from './configuration/firebase'\nimport { useStateValue } from './StateProvider';\n\nfunction Sidebar() {\n    const [rooms, setRooms] = useState([]);\n    const [{user}, dispatch] = useStateValue();\n\n    useEffect(() => {\n        const unsubscribe = db.collection(\"rooms\").\n        onSnapshot((snapshot) => \n                setRooms(\n                snapshot.docs.map((doc) => ({\n                        id: doc.id,\n                        data: doc.data(),\n                    }))\n                )\n            );\n\n        return () => {\n            unsubscribe();\n        };\n    }, [])\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__header\">\n                <Avatar src={user?.photoURL}/>\n                <div className=\"sidebar__headerRight\">\n                    <IconButton>\n                        <DonutLargeIcon />\n                    </IconButton>\n                    <IconButton>\n                        <ChatIcon />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>    \n                </div>\n            </div>\n\n            <div className=\"sidebar__search\">\n                <div className=\"sidebar__searchContainer\">\n                    <SearchOutlined />\n                    <input placeholder=\"Search or start new chat\" type=\"text\" />\n                </div>\n                \n            </div>\n\n            <div className=\"sidebar__chats\">\n                <SidebarChat addNewChat/>\n                {rooms.map(room => (\n                    <SidebarChat key={room.id} id={room.id}\n                    name={room.data.name} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/SidebarChat.js",["52"],"/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/Chat.js",["53","54","55"],"/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/configuration/firebase.js",[],"/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/Login.js",["56"],"import React from 'react'\nimport './Login.css'\nimport { Button } from \"@material-ui/core\";\nimport {auth, provider} from \"./configuration/firebase\";\nimport {useStateValue} from \"./StateProvider\"\nimport { actionTypes } from './reducer';\n\nfunction Login() {\n    const [{}, dispatch] = useStateValue();\n\n    const signIn = () => {\n        auth\n        .signInWithPopup(provider)\n        .then((result) => {\n            dispatch({\n                type: actionTypes.SET_USER,\n                user: result.user,\n            })\n        })\n        .catch((error) => alert(error.message));\n    }\n\n    return (\n        <div className=\"login\">\n            <div className=\"login__container\">\n                <img \n                    src={process.env.PUBLIC_URL +'/img/logo.png'}\n                    alt=\"\"\n                />\n                <div className=\"login__text\">\n                    <h1>Sign in to WhatsApp</h1>\n                </div>\n\n                <Button onClick={signIn}>\n                    Sign In With Google\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/StateProvider.js",[],"/Users/suminjung/Desktop/Programming/full-stack/chatting-app/src/reducer.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":4,"column":16,"nodeType":"63","messageId":"64","endLine":4,"endColumn":24},{"ruleId":"61","severity":1,"message":"65","line":10,"column":18,"nodeType":"63","messageId":"64","endLine":10,"endColumn":26},{"ruleId":"61","severity":1,"message":"65","line":14,"column":20,"nodeType":"63","messageId":"64","endLine":14,"endColumn":28},{"ruleId":"66","severity":1,"message":"67","line":17,"column":51,"nodeType":"68","messageId":"69","endLine":17,"endColumn":52,"fix":"70"},{"ruleId":"71","severity":1,"message":"72","line":49,"column":7,"nodeType":"73","endLine":49,"endColumn":9,"suggestions":"74"},{"ruleId":"61","severity":1,"message":"75","line":18,"column":20,"nodeType":"63","messageId":"64","endLine":18,"endColumn":30},{"ruleId":"66","severity":1,"message":"67","line":23,"column":47,"nodeType":"68","messageId":"69","endLine":23,"endColumn":48,"fix":"76"},{"ruleId":"66","severity":1,"message":"67","line":71,"column":54,"nodeType":"68","messageId":"69","endLine":71,"endColumn":56,"fix":"77"},{"ruleId":"78","severity":1,"message":"79","line":9,"column":12,"nodeType":"80","messageId":"81","endLine":9,"endColumn":14},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"84","text":"85"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'roomId'. Either include it or remove the dependency array.","ArrayExpression",["86"],"'dispatcher' is assigned a value but never used.",{"range":"87","text":"88"},{"range":"89","text":"90"},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",[661,671],"\n        .",{"desc":"91","fix":"92"},[856,870],"\n            .",[2211,2238],"\n                        ?.","Update the dependencies array to be: [roomId]",{"range":"93","text":"94"},[1361,1363],"[roomId]"]